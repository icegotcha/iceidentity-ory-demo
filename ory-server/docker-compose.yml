version: "3.7"

services:
  database:
    image: postgres:13
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: secret
    ports:
      - 5432:5432
    volumes:
      - type: volume
        source: database-storage
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./database/docker-entrypoint-initdb.d
        target: /docker-entrypoint-initdb.d
    networks:
      - intranet
  kratos-migrate:
    image: oryd/kratos:v0.13.0
    depends_on:
      - database
    environment:
      - DSN=postgres://admin:secret@database:5432/identity?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: volume
        source: database-storage
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./kratos/
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure
    networks:
      - intranet
  hydra-migrate:
    image: oryd/hydra:v2.2.0-rc.2
    depends_on:
      - database
    environment:
      - DSN=postgres://admin:secret@database:5432/oauth?sslmode=disable&max_conns=20&max_idle_conns=4
    command: migrate -c /etc/config/hydra/hydra.yml sql -e --yes
    volumes:
      - type: volume
        source: database-storage
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./hydra/
        target: /etc/config/hydra
    restart: on-failure
    networks:
      - intranet
  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.13.0
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://admin:secret@database:5432/identity?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: volume
        source: database-storage
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./kratos/
        target: /etc/config/kratos
    networks:
      - intranet
  hydra:
    image: oryd/hydra:v2.2.0-rc.2
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
      - "5555:5555" # Port for hydra token user
    command: serve -c /etc/config/hydra/hydra.yml all --dev
    volumes:
      - type: volume
        source: database-storage
        target: /var/lib/postgresql/data
        read_only: false
      - type: bind
        source: ./hydra/
        target: /etc/config/hydra
    environment:
      - DSN=postgres://admin:secret@database:5432/oauth?sslmode=disable&max_conns=20&max_idle_conns=4
    restart: unless-stopped
    depends_on:
      - hydra-migrate
    networks:
      - intranet
  # frontend:
  #   restart: unless-stopped
  #   build:
  #     context: ../frontend
  #     dockerfile: Dockerfile
  #     target: runner
  #   volumes:
  #     - ../frontend:/app
  #   ports:
  #     - "3000:3000"
  #   command: npm run dev
  #   environment:
  #     - NODE_ENV=development
  #     - ORY_SDK_URL=http://kratos:4433
  #   networks:
  #     - intranet
  # backend:
  #   restart: unless-stopped
  #   build:
  #     context: ../backend
  #     dockerfile: Dockerfile
  #     target: runner
  #   volumes:
  #     - ../backend:/app
  #   ports:
  #     - "3001:3001"
  #   command: npm run dev
  #   environment:
  #     - NODE_ENV=development
  #     - PORT=3001
  #     - HYDRA_PUBLIC_URL=http://hydra:4444
  #     - KRATOS_PUBLIC_URL=http://kratos:4433
  #     - KRATOS_BROWSER_URL=http://frontend:3000
  #   networks:
  #     - intranet

networks:
  intranet:
volumes:
  database-storage:
